"""
<숫자형>
파이썬은 아래와 같은 4가지의 숫자형 데이터를 핸들링할 수 있다.
- 정수 (ex. 123, -123, 0, ...)
- 실수 (ex. 123.45, 3.14, -123.0, 1.e-2)
- 8진수, 앞에 0o를 입력하고 숫자를 입력하면 8진수로 인식한다. (ex. 0o34, 0o25)
- 16진수, 앞에 0x를 입력하고 숫자를 입력하면 16진수로 인식한다. (ex. 0xAB, 0xff)

<문자열>
파이썬은 문자 하나를 다루는 자료형은 없다. 모든 것이 문자열로 처리. 따라서, 큰따옴표와 작은따옴표의 차이가 없다.
"안녕하세요!"와 `안녕하세요!`는 똑같다.
파이썬에서는 신기하게도 문자열에 +, -, *와 같은 연산자를 사용할 수 있는데, 예를 들어 print("안녕하세요" + "\n제 이름은 송기태입니다.")를 해보면
print("안녕하세요\n제 이름은 송기태입니다.")로 연산이 된다. 또한, print("안녕" * 3)를 해보면 print("안녕안녕안녕")로 연산이 된다.

> len()
그렇다면 문자열의 길이는 어떻게 구할까? len() 함수를 사용하면 된다.
len("안녕하세요!")의 값을 print 해보면, 6이 출력된다. 문자열의 길이에는 공백 문자도 포함된다! 주의하도록 하자.

> 인덱싱과 슬라이싱
또한, 문자열은 우리가 원하는 대로 잘라낼 수도 있고, 추출할 수도 있다.
파이썬은 0 based index로, 0부터 숫자를 센다. 아래와 같이 문자열 뒤에 대괄호를 입력하고, 그 안에 인덱스를 입력해주면 인덱스에 해당하는 문자를 추출할 수 있다.
"Hello"[0] = "H"
"Hello"[-1] = "o"
"Hello"[-2] = "l"
"Hello"[3] = "l"
"Hello"[len("Hello") - 1] = "o"
그렇다면 다음 문장에서 이름만 추출해보도록 하자. "안녕하세요. 저는 송기태입니다."
"안녕하세요. 저는 송기태입니다."[10]
"안녕하세요. 저는 송기태입니다."[11]
"안녕하세요. 저는 송기태입니다."[12]
코드가 쓸데없이 길어졌다. 이를 해결하기 위해서는 슬라이싱을 사용하면 된다. 인덱싱과 똑같이 문자열 뒤에 대괄호를 입력하고, 추출할 첫 인덱스와 마지막 인덱스에 1을 더한 값을 입력해주면 된다.
"안녕하세요. 저는 송기태입니다."[10:12+1]

> 알아두면 좋은 문자열 메소드
1. 위치 알려주기, "안녕하세요. 저는 송기태입니다."에서 '요'의 위치를 알고 싶을 때에는 $[문자열].find($[찾고 싶은 거])를 사용하면 된다. 문자가 존재한다면 위치를 리턴하고, 존재하지 않으면 -1을 출력한다.
2. 문자열 삽입, "$[문자열 사이에 넣을 거]".join($[원래 문자열])
3. 문자열 나누기, $[원래 문자열].split($[어떤 기준으로 문자열을 나눌 것인가?])

<부울형>
True와 False로 이루어져있으며, 각각 1과 0의 값을 갖는다.
"""

if __name__ == '__main__':
    def main():
        pass


    main()
