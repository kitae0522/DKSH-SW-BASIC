"""
삽입 정렬 [오름차순]
요약: 이미 정렬된 파일에 새로운 레코드가 삽인될 위치를 찾아서 삽입한다

정렬의 시작은 두 번째 요소의 위치를 찾는 것부터 시작한다.

원본: [9, 4, 5, 7, 2]

[1회전 시작]
현재 9를 요소가 1개인 정렬이 완료된 리스트라고 가정한다. [9]
이때 2를 리스트에 삽입해야 할 때 적절한 위치를 찾는 것이다.
우선 data = 2 로  삽입할 데이터를 백업 해 둔다.

2가 9보다 작기 때문에 2가 9의 위치에 와야 한다.
그래서 9를 2의 위치로 옮긴다.  그러면 2의 자료값이 사라진다! [그러나 data으로 백업해 두었다]
그리고 삽입할 위치를 index에 저장한다.
[9, 9, 4, 5, 7]  data = 2 , index = 0

이렇게 1회전이 끝나고, index 위치에 data 데이터를 저장한다.
[2, 9, 4, 5, 7] => [2, 9]는 정렬이 완료된 리스트

2회전 시작
[2, 9, 4, 5, 7] 에서 [2, 9] 리스트에 [4]를 추가하며 적절한 위치를 찾는 것이다.
4를 data =4 로 백업해 두자.
4가 9보다 작기 때문에 9를 오른쪽으로 하나 이동하여 저장하고, 그 위치를 index에 저장한다.
data =4 index = 1
[2, 9, 9, 5, 7]

그리고 2와 4를 비교한다. 이때 4가 2보다 크기 때문에 현상태를 유지한다.
이렇게 회전이 끝나고 백업해둔 data 요소를 index에 저장한다.
num_list[index] = data
[2, 4, 9, 5, 7]

요소 2의 자료를 백업 해 두어야 한다.


1회전 시작 [9, 2, 4, 5, 7]
i = 1  Data = 2
     j = 0
비교 : [9]  <- 2(Data)
     9 > 2, 9오른쪽으로 복사. [9, 9]. 삽입 위치 기록 insertion_index = 0  (j)

     j 리스트 왼쪽 끝 도달.
     삽입 위치가 지정되어 있으면 Data를 삽입 위치에 삽입 [insertion_index = 0 , data = 2)
     [2, 9]
     1회전 종료
결과 : [2, 9]  전체 리스트 [2, 9, 4, 5, 7]


2회전 시작 [2, 9, 4, 5, 7]
i = 2  Data = 4
     j = 1
비교 : [2, 9] <- 4(Data)
     9 > 4,  9. 오른쪽으로 복사 이동 [2, 9, 9 ] 삽입 위치 기록 insertion_index = 1 (j)
     j리스트 왼쪽 끝 도달 하지 않음 j 감소

     j = 0
비교 : [2, 9, 9] <-4(Data)
     2 < 4,  이동할 필요 없음.
     j리스트 왼쪽 끝 도달.

     삽입 위치가 지정되어 있으면 Data를 삽입 위치에 삽입
     [insertion_index = 1 , data = 4)
     [2, 9, 9] -> [2, 4, 9]
     2회전 종료
결과 : [2, 4, 9] 전체 리스트 [2, 4, 9, 5, 7]


3회전 시작  [2, 4, 9, 5, 7]
i = 3 Data = 5
     j = 2
비교 [2, 4, 9 ] <- 5(Data)
     9 > 5,  9. 오른쪽으로 복사 이동 [2, 4, 9, 9 ] 삽입 위치 기록 insertion_index = 2 (j)
     j리스트 왼쪽 끝 도달 하지 않음 j 감소

     j= 1
비교 [2, 4, 9, 9 ] <- 5(Data)
     4 < 5, 이동할 필요 없음
     j리스트 왼쪽 끝 도달 하지 않음 j 감소

     j = 0
비교 [2, 4, 9, 9 ] < -5(Data)
     2< 5, 이동할 필요 없음
     j리스트 왼쪽 끝 도달.

     삽입 위치가 지정되어 있으면 Data를 삽입 위치에 삽입
     [insertion_index = 2 , data = 5)
     [2, 4, 9, 9] -> [2, 4, 5, 9]
     3회전 종료
결과 : [2, 4, 5, 9] 전체리스트 [2, 4, 5, 9, 7]


4회전 시작 [2, 4, 5, 9, 7]
i = 4 Data = 7
     j = 3
비교 [2, 4, 5, 9] <- 7(Data)
     9 > 7, 9 오른쪽으로 복사 이동 [2, 4, 5, 9, 9 ] 삽입 위치 기록 insertion_index = 3 (j)
     j리스트 왼쪽 끝 도달 하지 않음 j 감소

     j = 2
비교 [2, 4, 5, 9, 9] <- 5(Data)
     5 <  9,  이동할 필요 없음
     j리스트 왼쪽 끝 도달 하지 않음 j 감소

     j = 1
비교 [2, 4, 5, 9, 9] <- 5(Data)
     4 <  9,  이동할 필요 없음
     j리스트 왼쪽 끝 도달 하지 않음 j 감소

     j = 0
비교 [2, 4, 5, 9, 9] <- 5(Data)
     4 <  9,  이동할 필요 없음

     j리스트 왼쪽 끝 도달.

     삽입 위치가 지정되어 있으면 Data를 삽입 위치에 삽입
     [insertion_index = 3 , data = 7)
     [2, 4, 5, 9, 9] -> [2, 4, 5, 7, 9]
     4회전 종료
결과 : [2, 4, 5, 7, 9] 전체리스트 [2, 4, 5, 7, 9]

"""


def insertion_sort(num_list):
    for i in range(1, len(num_list)):
        data = num_list[i]
        index = i
        for j in range(i - 1, - 1, -1):
            if num_list[j] > data:
                num_list[j + 1] = num_list[j]
                index = j
        num_list[index] = data


if __name__ == "__main__":
    def main():
        numbers = [9, 2, 4, 5, 7]
        insertion_sort(numbers)
        print(f"최종 결과 = {numbers}")


    main()
